name: Pull Request Checks

on:
  pull_request:
    branches: [main, develop]

jobs:
  # Analyse de s√©curit√© et qualit√© du code
  security-scan:
    name: 'Security & Quality Scan'
    runs-on: ubuntu-latest
    steps:
      - name: üèó Setup repo
        uses: actions/checkout@v4

      - name: üèó Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üîç Run security audit
        run: npm audit --audit-level high

      - name: üßπ Run ESLint with security rules
        run: npm run lint

      - name: üìä SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # Tests E2E (optionnel, n√©cessite setup Detox)
  e2e-tests:
    name: 'E2E Tests'
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'e2e-tests')
    steps:
      - name: üèó Setup repo
        uses: actions/checkout@v4

      - name: üèó Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: üì¶ Install dependencies
        run: npm ci

      - name: ü§ñ Run E2E tests
        run: npm run test:e2e
        # N√©cessite configuration Detox

  # V√©rification des performances
  performance-check:
    name: 'Performance Check'
    runs-on: ubuntu-latest
    steps:
      - name: üèó Setup repo
        uses: actions/checkout@v4

      - name: üèó Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üìè Bundle size check
        run: |
          npm run expo export
          du -sh dist/
          # Ajouter des alertes si la taille d√©passe les limites

  # Commentaire automatique sur la PR
  pr-comment:
    name: 'PR Comment'
    runs-on: ubuntu-latest
    needs: [security-scan, performance-check]
    if: always()
    steps:
      - name: üí¨ Comment PR
        uses: actions/github-script@v6
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.find(comment => 
              comment.user.login === 'github-actions[bot]' && 
              comment.body.includes('ü§ñ Analyse automatique')
            );

            const message = `
            ## ü§ñ Analyse automatique de la PR

            ‚úÖ **S√©curit√©**: Scan termin√©
            ‚úÖ **Qualit√©**: ESLint pass√©
            ‚úÖ **Performance**: Bundle analys√©

            ### Prochaines √©tapes:
            1. Review du code par l'√©quipe
            2. Tests manuels si n√©cessaire
            3. Merge vers develop

            *G√©n√©r√© automatiquement par GitHub Actions*
            `;

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: message
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: message
              });
            }
